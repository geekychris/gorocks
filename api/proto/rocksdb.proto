syntax = "proto3";

package rocksdb;
option go_package = "rocksdb-service/api/proto";

service RocksDBService {
    // Put stores a key-value pair in the specified database
    rpc Put(PutRequest) returns (PutResponse) {}
    
    // Get retrieves a value for a given key from the specified database
    rpc Get(GetRequest) returns (GetResponse) {}
    
    // Delete removes a key-value pair from the specified database
    rpc Delete(DeleteRequest) returns (DeleteResponse) {}
    
    // StreamGet retrieves multiple key-value pairs based on exact keys or prefix from the specified database
    rpc StreamGet(StreamGetRequest) returns (stream StreamGetResponse) {}
}

message PutRequest {
    string database_name = 1;  // Name of the database to operate on
    string key = 2;
    bytes value = 3;
}

message PutResponse {
    bool success = 1;
    string error = 2;
}

message GetRequest {
    string database_name = 1;  // Name of the database to operate on
    string key = 2;
}

message GetResponse {
    bytes value = 1;
    bool found = 2;
    string error = 3;
}

message DeleteRequest {
    string database_name = 1;  // Name of the database to operate on
    string key = 2;
}

message DeleteResponse {
    bool success = 1;
    string error = 2;
}

message StreamGetRequest {
    string database_name = 1;  // Name of the database to operate on
    oneof query {
        string prefix = 2;
        KeySet keys = 3;
    }
}

message KeySet {
    repeated string keys = 1;
}

message StreamGetResponse {
    string key = 1;
    bytes value = 2;
    string error = 3;
}

